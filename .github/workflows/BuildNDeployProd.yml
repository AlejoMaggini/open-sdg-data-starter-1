name: Build and Deploy Production Data

on: # run this workflow when a push has been made to `Jekyll-Alf` branch
  push:
    branches:
      - production


jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:   
 ###########################################################################################################
 #      This is the CI portion
 ###########################################################################################################
        - name: Checkout repo
          uses: actions/checkout@v2
          
          
 ###########################################################################################################
 #      This is the CD portion
 ###########################################################################################################       
          
        #- uses: actions/checkout@v1 # checks out the code in the repository
        - name: Setup Python
          uses: actions/setup-python@v1 # sets up python in our environment
          with:
            python-version: '3.x' # install python version 3.x, default architecture is x64
                 
          
          # this Action should follow steps to set up Python build environment
        - name: Install Python dependencies requirements
          run: pip3 install -r scripts/requirements.txt

        
        
        - name: Build site data
          run: python3 scripts/build_data.py
        
        - name: Install AWS CLI
          run: pip3 install awscli --upgrade --user # install the cli with upgrade to any requirements and into the subdir of the user
          
          
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1 # use the official GitHub Action from AWS to setup credentials
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            mask-aws-account-id: true
        
    
        - name: Push Contents to S3 # push the current working directory to the S3 bucket
          run: aws s3 sync _site/ s3://${{ secrets.S3_BUCKET_NAME_PROD }} --exclude ".git/*" --exclude ".github/*" --delete # have the bucket have the same content in the repo & exclude the git related directories.
        
        - name: Invalidate CloudFront Cache # Invalidate the CloudFront Distribution Cache to get contents from the S3 bucket
          run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_DISTRIBUTION_ID_PROD }} --paths "/*"
              
          
          